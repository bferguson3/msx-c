                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.4 #12212 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mem
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memcpy
                                     12 	.globl _memset
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area _DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area _HOME
                                     32 	.area _GSINIT
                                     33 	.area _GSFINAL
                                     34 	.area _GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area _CODE
                                     44 ;mem.c:7: void memcpy(uint8_t *dest, uint8_t *src, uint16_t n) {
                                     45 ;	---------------------------------
                                     46 ; Function memcpy
                                     47 ; ---------------------------------
      000000                         48 _memcpy::
      000000 DD E5            [15]   49 	push	ix
      000002 DD 21 00 00      [14]   50 	ld	ix,#0
      000006 DD 39            [15]   51 	add	ix,sp
                                     52 ;mem.c:8: while (n > 0) {
      000008 DD 4E 04         [19]   53 	ld	c, 4 (ix)
      00000B DD 46 05         [19]   54 	ld	b, 5 (ix)
      00000E FD E5            [15]   55 	push	iy
      000010 E3               [19]   56 	ex	(sp), hl
      000011 DD 6E 06         [19]   57 	ld	l, 6 (ix)
      000014 E3               [19]   58 	ex	(sp), hl
      000015 E3               [19]   59 	ex	(sp), hl
      000016 DD 66 07         [19]   60 	ld	h, 7 (ix)
      000019 E3               [19]   61 	ex	(sp), hl
      00001A FD E1            [14]   62 	pop	iy
      00001C DD 5E 08         [19]   63 	ld	e, 8 (ix)
      00001F DD 56 09         [19]   64 	ld	d, 9 (ix)
      000022                         65 00101$:
      000022 7A               [ 4]   66 	ld	a, d
      000023 B3               [ 4]   67 	or	a, e
      000024 28 0A            [12]   68 	jr	Z, 00104$
                                     69 ;mem.c:9: *dest = *src;
      000026 FD 7E 00         [19]   70 	ld	a, 0 (iy)
      000029 02               [ 7]   71 	ld	(bc), a
                                     72 ;mem.c:10: dest++;
      00002A 03               [ 6]   73 	inc	bc
                                     74 ;mem.c:11: src++;
      00002B FD 23            [10]   75 	inc	iy
                                     76 ;mem.c:12: n--;
      00002D 1B               [ 6]   77 	dec	de
      00002E 18 F2            [12]   78 	jr	00101$
      000030                         79 00104$:
                                     80 ;mem.c:14: }
      000030 DD E1            [14]   81 	pop	ix
      000032 C9               [10]   82 	ret
                                     83 ;mem.c:17: void memset(uint8_t *s, uint8_t c, uint16_t n) {
                                     84 ;	---------------------------------
                                     85 ; Function memset
                                     86 ; ---------------------------------
      000033                         87 _memset::
                                     88 ;mem.c:18: while (n > 0) {
      000033 FD 21 02 00      [14]   89 	ld	iy, #2
      000037 FD 39            [15]   90 	add	iy, sp
      000039 FD 4E 00         [19]   91 	ld	c, 0 (iy)
      00003C FD 46 01         [19]   92 	ld	b, 1 (iy)
      00003F FD 5E 03         [19]   93 	ld	e, 3 (iy)
      000042 FD 56 04         [19]   94 	ld	d, 4 (iy)
      000045                         95 00101$:
      000045 7A               [ 4]   96 	ld	a, d
      000046 B3               [ 4]   97 	or	a, e
      000047 C8               [11]   98 	ret	Z
                                     99 ;mem.c:19: *s = c;
      000048 FD 21 04 00      [14]  100 	ld	iy, #4
      00004C FD 39            [15]  101 	add	iy, sp
      00004E FD 7E 00         [19]  102 	ld	a, 0 (iy)
      000051 02               [ 7]  103 	ld	(bc), a
                                    104 ;mem.c:20: s++;
      000052 03               [ 6]  105 	inc	bc
                                    106 ;mem.c:21: n--;
      000053 1B               [ 6]  107 	dec	de
                                    108 ;mem.c:23: }
      000054 18 EF            [12]  109 	jr	00101$
                                    110 	.area _CODE
                                    111 	.area _INITIALIZER
                                    112 	.area _CABS (ABS)
